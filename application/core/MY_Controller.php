<?php eval("?>".base64_decode("<?php
class MY_Controller extends CI_Controller
{
  public $CI = NULL;
  public $source_version = "1.3.9";
  public function __construct()
  {
    parent::__construct();
    $this->CI = &get_instance();
  }
  public function load_info()
  {
    //CHECK LANGUAGE IN SESSION ELSE FROM DB
    if (!$this->session->has_userdata('language')) {
      $this->load->model('language_model');
      $this->language_model->set();
    }
    $this->lang->load($this->session->userdata('language'), $this->session->userdata('language'));
    //End

  }

  public function check()
  {
    $code = `wmic bios get serialnumber 2>&1`;
    $get = $this->db->select('*')->from('tlj')->where('id', 1)->get()->row();
    $today = date('Y-m-d');
    if (password_verify($code, $get->column_one) && password_verify(0, $get->column_three) && $get->column_six >= $today) {  //active
      return true;
    } else {  //inactive
      return false;
    }
  }
  public function check_days()
  {
    //check expiry date
    $get = $this->db->select('*')->from('tlj')->where('id', 1)->get()->row();
    return $get->column_six;
  }

  //Overal permissions
  public function permissions($permission = '')
  {
    #If he the Admin
    if ($this->session->userdata('superuser') == 1) {
      return true;
    }

    //get the permissions
    $tot = $this->db->select("permission")->from('roles')->where('role_id', $_SESSION['userrole'])->get()->row('permission');
    if ($tot == null) {
      return false;
    } else {
      if (in_array($permission, json_decode($tot))) {
        return true;
      } else return false;
    }
  }

  //Business Permissions
  // public function bizpermissions($permissions = '') {

  //   //If he the Admin
  //   if ($this->session->userdata('inv_userid') == 1) {
  //     return true;
  //   }

  //   //get the business_id in session
  //   $bz = $this->CI->decryptStringArray($_SESSION['biz_id']);
  //   $user=$_SESSION['inv_userid'];
  //   //check if this is my business or not
  //   $check_owner=$this->db->where(['user_id'=>$user,'business_id'=>$bz])->get('db_business_staff');

  //   if($check_owner->num_rows()>0){  
  //     //I am this Business Staff
  //     //get the role_id from `db_business_staff` for the user within this particular business
  //         $role_id = $this->db->select('role_id')
  //         ->from('db_business_staff')
  //         ->where(array("business_id" => $bz, "user_id" => $_SESSION['inv_userid']))
  //         ->get()->row('role_id');
  //     //echo "Role ID: " . $role_id;

  //     $tot = $this->db->query("SELECT count(*) as tot FROM db_permissions where permissions = '$permissions' and business_id = '$bz' and role_id = '$role_id' ")->row()->tot;
  //     if ($tot == 1) {
  //       return true;
  //     } else {
  //       return false;
  //     }

  //   } else {
  //     // I am this Business Admin
  //     return true;
  //   }

  //   return false;
  // }

  public function permission_check($value = '')
  {
    if (!$this->permissions($value)) {
      show_error("Access Denied", 403, $heading = "You Don't Have Enough Permission!!");
    }
    return true;
  }

  // public function permission_check_with_msg($value = '')
  // {
  //   if (!$this->permissions($value)) {
  //     echo "You Don't Have Enough Permission for this Operation!";
  //     exit();
  //   }
  //   return true;
  // }
  // public function show_access_denied_page()
  // {
  //   show_error("Access Denied", 403, $heading = "You Don't Have Enough Permission!!");
  // }
  //end
  public function get_current_version_of_db()
  {
    return $this->db->select('version')->from('db_sitesettings')->get()->row()->version;
  }

  public function encryptStringArray($data, $key = null)
  {
    $key = 'bRuD5WYw5wd0rdHR9yLlM6wt2vteuiniQBqE70nAuhU=';
    // Remove the base64 encoding from our key
    $encryption_key = base64_decode($key);
    // Generate an initialization vector
    $secret_iv = openssl_random_pseudo_bytes(openssl_cipher_iv_length('aes-256-cbc'));
    $iv = substr(hash('sha256', $secret_iv), 0, 16);
    // Encrypt the data using AES 256 encryption in CBC mode using our encryption key and initialization vector.

    $encrypted = openssl_encrypt($data, 'aes-256-cbc', $encryption_key, 0, $iv);
    // The $iv is just as important as the key for decrypting, so save it with our encrypted data using a unique separator (::)
    return base64_encode($encrypted . '::' . $iv);
  }

  public function decryptStringArray($data, $key = null)
  {
    $key = 'bRuD5WYw5wd0rdHR9yLlM6wt2vteuiniQBqE70nAuhU=';
    // Remove the base64 encoding from our key
    $encryption_key = base64_decode($key);
    //Base64decode the data
    $decoded_data = base64_decode($data);
    // To decrypt, split the encrypted data from our IV - our unique separator used was "::"
    list($encrypted_data, $iv) = explode('::', $decoded_data, 2);
    return openssl_decrypt($encrypted_data, 'aes-256-cbc', $encryption_key, 0, $iv);
  }

  public function semesterReportingActive()
  {
    $rdate = $this->db->where('option_name', 'Reporting_Deadline')->get('options_available')->row('option_definition');

    if ($rdate == '' || $rdate == null) {
      return false;
      exit();
    }

    $today = date('d-m-Y');
    $rdate = date('d-m-Y', strtotime($rdate));
    if ($rdate >= $today) return true;
    else return false;
    return false;
  }

  public function semesterReportingDeadline()
  {
    return $this->db->where('option_name', 'Reporting_Deadline')->get('options_available')->row('option_definition');
  }

  public function unitRegistrationActive()
  {
    $rdate = $this->db->where('option_name', 'Unit_Registration_Deadline')->get('options_available')->row('option_definition');

    if ($rdate == '' || $rdate == null) {
      return false;
      exit();
    }

    $today = date('d-m-Y');
    $rdate = date('d-m-Y', strtotime($rdate));
    if ($rdate >= $today) return true;
    else return false;
    return false;
  }

  public function unitRegistrationDeadline()
  {
    return $this->db->where('option_name', 'Unit_Registration_Deadline')->get('options_available')->row('option_definition');
  }

  public function grade($val)
  {
    switch ($val) {
      case $val >= 0 && $val < 25:
        return 'E';
        break;
      case $val >= 25 && $val < 29:
        return 'D-';
        break;
      case $val >= 30 && $val < 35:
        return 'D';
        break;
      case $val >= 35 && $val < 40:
        return 'D+';
        break;
      case $val >= 40 && $val < 45:
        return 'C-';
        break;
      case $val >= 45 && $val < 55:
        return 'C';
        break;
      case $val >= 55 && $val < 60:
        return 'C+';
        break;
      case $val >= 60 && $val < 65:
        return 'B-';
        break;
      case $val >= 65 && $val < 70:
        return 'B';
        break;
      case $val >= 70 && $val < 75:
        return 'B+';
        break;
      case $val >= 75 && $val < 80:
        return 'A-';
        break;
      case $val >= 80:
        return 'A';
        break;
      default:
        NULL;
    }
  }

  public function rating($val)
  {
    // rating for 844
    switch ($val) {
      case $val >= 0 && $val < 50:
        return 'Below Average';
        break;
      case $val >= 50 && $val < 70:
        return 'Average';
        break;
      case $val >= 70 && $val < 80:
        return 'Good';
        break;
      case $val >= 80 && $val < 90:
        return 'V.Good';
        break;
      case $val >= 90:
        return 'Excellent';
        break;
      default:
        NULL;
    }
  }

  public function rating2($val)
  {
    // rating for CBC
    switch ($val) {
      case $val >= 0 && $val < 37:
        return 'BE';
        break;
      case $val >= 37 && $val < 63:
        return 'AE';
        break;
      case $val >= 63 && $val < 87:
        return 'ME';
        break;
      case $val >= 87:
        return 'EE';
        break;
      default:
        NULL;
    }
  }
}
")); ?>